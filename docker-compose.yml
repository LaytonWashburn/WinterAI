volumes:
  client_node_modules:
  pg_data:
  minio_data:
  loki_data:
  grafana_data:
services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    volumes:
      - client_node_modules:/app/node_modules
      - ./client:/app
    ports:
      - "5173:5173"
    env_file:
      - ./client/.env
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    volumes:
      - ./server:/app
    ports:
      - "8000:8000"
    env_file:
      - ./server/.env
      - ./.minio.env
      - ./.postgres.env
  searxng:
    image: searxng/searxng:latest
    container_name: searxng
    ports:
      - "8080:8080"
    volumes:
      - ./searxng_config:/etc/searxng:rw
    environment:
      - BASE_URL=http://localhost:8080/
      - INSTANCE_NAME=MyResumeSearch
    restart: unless-stopped
  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    env_file:
      -  .postgres.env
    volumes:
      - pg_data:/var/lib/postgresql/data
  minio:
    image: quay.io/minio/minio
    container_name: minio
    command: server /data --console-address ":9001"
    env_file:
    - .minio.env
    volumes:
      - minio_data:/data
    ports:
      - 9000:9000
      - 9001:9001
  # prometheus:
  #   image: prom/prometheus
  #   volumes:
  #     - "./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
  #     - "./prometheus/rules.yml:/etc/prometheus/rules.yml"
  #   ports:
  #     - 9090:9090
  # node-exporter:
  #   image: prom/node-exporter
  #   ports:
  #     - 9100:9100
  # alert-manager:
  #   image: prom/alertmanager
  #   volumes:
  #     - "./prometheus/alertmanager.yml:/alertmanager/alertmanager.yml"
  #   ports:
  #     - 9093:9093
  # loki:
  #   image: grafana/loki:2.8.2
  #   ports:
  #     - "3100:3100"
  #   volumes:
  #     - ./loki/loki-config.yaml:/etc/loki/local-config.yaml
  #     - loki_data:/loki
  #     - ./loki/wal:/loki/wal     
  #   command: -config.file=/etc/loki/local-config.yaml

  # promtail:
  #   image: grafana/promtail:2.8.2
  #   volumes:
  #     - ./promtail/promtail-config.yaml:/etc/promtail/promtail-config.yaml
  #     - /var/log:/var/log
  #     - /var/lib/docker/containers:/var/lib/docker/containers:ro
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   command: -config.file=/etc/promtail/promtail-config.yaml
  # grafana:
  #   image: grafana/grafana:latest
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #   environment:
  #     - GF_SECURITY_ADMIN_USER=user
  #     - GF_SECURITY_ADMIN_PASSWORD=password